/*
  ┌─────────────────────────────────────────────────────────────────────────┐
  │ Ctrl+X, Ctrl+V                                                          │
  ├─────────────────────────────────────────────────────────────────────────┤
  │ Петя решил написать свой собственный текстовый редактор и просит вас    │
  │ помочь протестировать его прототип. На текущей стадии разработки в      │
  │ редакторе есть только возможность загрузить файл и выполнять с ним      │
  │ такие                                                                   │
  │ действия:                                                               │
  │ переместить курсор на строчку вниз (Down)                               │
  │ переместить курсор на строчку вверх (Up)                                │
  │ вырезать текущую строку в буфер обмена (Ctrl+X)                         │
  │ вставить строку из буфера перед текущей строкой (Ctrl+V)                │
  │ Изначально курсор находится на первой (начальной) строке.               │
  │ Операции Down с курсором на последней строке и Up с курсором на первой  │
  │ строке должны                                                           │
  │ игнорироваться.                                                         │
  │ Любой текстовый файл в системе заканчивается переводом строки. Поэтому  │
  │ последняя строка любого файла является пустой. Операция Ctrl+X на       │
  │ пустой строке ничего не                                                 │
  │ делает.                                                                 │
  │ Изначально буфер редактора пустой. Операция Ctrl+X перезаписывает       │
  │ буфер, если в нём уже было какое-то значение. Операция Ctrl+V не        │
  │ очищает буфер и может быть использована несколько раз подряд. Операция  │
  │ Ctrl+V при пустом буфере ничего не                                      │
  │ делает.                                                                 │
  │ Помогите Пете протестировать его текстовый редактор. Напишите           │
  │ программу, которая по заданному файлу и набору команд выводит           │
  │ получившийся                                                            │
  │ файл.                                                                   │
  ├─────────────────────────────────────────────────────────────────────────┤
  │ Формат ввода                                                            │
  │ Программе на вход подаётся набор строк, разделённых переносом строки.   │
  │ Длина каждой строки не превышает 3000 символов. Последняя строка в      │
  │ файле является пустой. Она означает завершение ввода файла. Других      │
  │ пустых строк в файле быть не                                            │
  │ может.                                                                  │
  │ После этого и до окончания ввода программе подаются команды Down, Up,   │
  │ Ctrl+X,                                                                 │
  │ Ctrl+V.                                                                 │
  ├─────────────────────────────────────────────────────────────────────────┤
  │ Формат вывода                                                           │
  │ Выведите получившийся файл построчно.                                   │
  └─────────────────────────────────────────────────────────────────────────┘
 */

#include <iostream>
#include <list>
#include <string>
#include <utility>

int main()
{
  std::list<std::string> file;

  while (true)
  {
    std::string line;
    std::getline(std::cin, line);

    if (line.empty())
    {
      break;
    }

    file.push_back(line);
  }

  auto cursor = file.begin();
  std::string buffer;

  std::string command;
  while (std::cin >> command)
  {
    if (command == "Up")
    {
      if (cursor == file.begin())
      {
        continue;
      }
      --cursor;
    }
    else if (command == "Down")
    {
      if (cursor == file.end())
      {
        continue;
      }
      ++cursor;
    }
    else if (command == "Ctrl+X")
    {
      if (cursor == file.end())
      {
        continue;
      }
      buffer = std::move(*cursor);
      cursor = file.erase(cursor);
    }
    else if (command == "Ctrl+V")
    {
      if (buffer.empty())
      {
        continue;
      }
      file.insert(cursor, buffer);
    }
  }

  for (const auto &x : file)
  {
    std::cout << x << "\n";
  }
}