/*
  ???????????????????????????????????????????????????????????????????????????
  ? Файловая система                                                        ?
  ???????????????????????????????????????????????????????????????????????????
  ? Дан список всех файлов в некоторой файловой системе. Необходимо         ?
  ? вывести все непустые директории этой файловой системы в                 ?
  ? лексикографическом                                                      ?
  ? порядке.                                                                ?
  ? Гарантируется, что все пути начинаются от корня файловой системы. Все   ?
  ? пути состоят из слешей (/), латинских символов, цифр и точек. Два       ?
  ? слеша никогда не стоят                                                  ?
  ? подряд.                                                                 ?
  ???????????????????????????????????????????????????????????????????????????
  ? Формат ввода                                                            ?
  ???????????????????????????????????????????????????????????????????????????
  ? На вход подаются строки, описывающие пути ко всем файлам в системе.     ?
  ? Каждый путь содержится в отдельной строке. Число строк не превосходит   ?
  ? 10000.                                                                  ?
  ???????????????????????????????????????????????????????????????????????????
  ? Формат вывода                                                           ?
  ???????????????????????????????????????????????????????????????????????????
  ? Выведите все непустые директории в этой файловой системе в              ?
  ? лексикографическом порядке. Каждый путь должен начинаться со слеша и    ?
  ? заканчиваться                                                           ?
  ? слешом.                                                                 ?
  ???????????????????????????????????????????????????????????????????????????
 */
#include <iostream>
#include <set>
#include <string>
int main()
{
  std::set<std::string> Directories;
  std::string Path;
  while (std::getline(std::cin, Path))
  {
    for (size_t i = 0; i != Path.size(); ++i)
    {
      if (Path[i] == '/')
      {
        Directories.insert(Path.substr(0, i + 1));
      }
    }
  }
  for (const auto &directorie : Directories)
  {
    std::cout << directorie << "\n";
  }
}